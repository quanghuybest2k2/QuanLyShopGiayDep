<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbHinhAdmin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>